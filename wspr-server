#!/bin/bash
#
#    Scheduling script, that times recording of wspr transmissions
#
# Copyright (C) 2016-present  Clemens Heese / PA7T <pa7t@wsprlive.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# check if unsubmitted wspr spots are stored on sd-card
if [ -e /opt/redpitaya/www/apps/sdr_wspr/ALL_WSPR.TXT ]; then
	echo "Unsubmitted ALL_WSPR.TXT found!"
	cp /opt/redpitaya/www/apps/sdr_wspr/ALL_WSPR.TXT /dev/shm/
	rm /opt/redpitaya/www/apps/sdr_wspr/ALL_WSPR.TXT
fi

# start server operation
MAC_LAST=`ip addr show eth0 | sed -n "s/.*ether \([^ ]*\).*/\1/p"  | sed -n "s/://pg" | sed 's/.*\(.\{6\}\)/\1/'`

while true
	do sleep 1
		#echo `date`" Sleeping ..."

		. /opt/redpitaya/www/apps/sdr_wspr/wspr-vars.sh

		# wait till next decode finishes: second 53	
		SECONDS=`date +%S`
		if [ $(( `date +%M | sed 's/^0//'` % 2)) -eq 0 ]
		then
			#echo 'Sleeping for '`expr 120 - $SECONDS`' s'
			sleep `expr 120 - 7 - $SECONDS`
		else
			#echo 'Sleeping for '`expr 60 - $SECONDS`' s'
			sleep `expr 60 - 7 - $SECONDS`	
		fi

		# OPTION: measure PPM deviation to external reference
		if [[ $ENABLE_PPM_CORR_GPS -eq "true" ]]
		then
			cat /opt/redpitaya/www/apps/sdr_wspr/rez_counter.bit > /dev/xdevcfg # load reziprocal counter bitstream
			rw
			/opt/redpitaya/www/apps/sdr_wspr/update_ppm_ext.sh >> /opt/redpitaya/www/apps/sdr_wspr/ppm_$MAC_LAST.log
			cat /opt/redpitaya/www/apps/sdr_wspr/sdr_transceiver_wspr.bit > /dev/xdevcfg # load sdr_wspr bitstream
		fi
		
		# wait till beginn of next minute	
		SECONDS=`date +%S`
		if [ $(( `date +%M | sed 's/^0//'` % 2)) -eq 0 ]
		then
			#echo 'Sleeping for '`expr 120 - $SECONDS`' s'
			sleep `expr 120 - $SECONDS`
		else
			#echo 'Sleeping for '`expr 60 - $SECONDS`' s'
			sleep `expr 60 - $SECONDS`	
		fi

		#echo "Starting recording with nohup in background"
		nohup sh /opt/redpitaya/www/apps/sdr_wspr/decode-wspr-parallel.sh  >> /dev/shm/sdr-wspr.log 2>&1 &
		
		# OPTION: record temperature during wspr receiption and correct ppm value
		#sleep 10 # wait till fpga is heating oscillator constantly
		if [[ $ENABLE_PPM_CORR -eq "true" ]]
		then
			sh -c '/opt/redpitaya/www/apps/sdr_wspr/update_ppm.sh 110' # record PPM during wspr receiption and correct ppm value
		fi

		# copy unsubmitted wspr receiptions to sd-card every hour 
		if [ $(( `date +%M | sed 's/^0//'` )) -eq 0 ]
		then
			cp /dev/shm/ALL_WSPR.TXT /opt/redpitaya/www/apps/sdr_wspr/
		fi
done
